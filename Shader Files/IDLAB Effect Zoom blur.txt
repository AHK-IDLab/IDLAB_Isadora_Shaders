/*Zoom blur shader - Fragment ShaderCreated for Isadora by Fred Rodrigues*/uniform sampler2D tex0;uniform float Xoffset;// ISADORA_FLOAT_PARAM(Xoffset, fx, 0.0, 1.0, 0.5, "Zoom x direction");uniform float Yoffset;// ISADORA_FLOAT_PARAM(Yoffset, fy, 0.0, 1.0, 0.5, "Zoom y direction");uniform float exposure;// ISADORA_FLOAT_PARAM(exposure, exp, 0.0, 1.0, 1.0, "Zoom exposure compensation");uniform float decay;// ISADORA_FLOAT_PARAM(decay, dcy, 0.0, 1.0, 0.7, "Zoom decay/feedback");uniform float density;// ISADORA_FLOAT_PARAM(density, dns, 0.0, 1.0, 0.5, "Zoom repeat densite");uniform float weight;// ISADORA_FLOAT_PARAM(weight, hgt, 0.0, 1.0, 0.5, "Weight");uniform float clampAmount;// ISADORA_FLOAT_PARAM(clampAmount, clmp, 0.0, 1.0, 1.0, "Brightness clamp");const int iSamples = 20;void main(void) {        vec2 vUv = gl_TexCoord[0].xy;        vec2 deltaTextCoord = vec2(vUv - vec2(Xoffset,Yoffset));        deltaTextCoord *= 1.0 /  float(iSamples) * density;        vec2 coord = vUv;        float illuminationDecay = 1.0;        vec4 FragColor = vec4(0.0);        for(int i=0; i < iSamples ; i++)        {            coord -= deltaTextCoord;            vec4 texel = texture2D(tex0, coord);            texel *= illuminationDecay * weight;            FragColor += texel;            illuminationDecay *= decay;        }                FragColor *= exposure;        FragColor = clamp(FragColor, 0.0, clampAmount);        gl_FragColor = FragColor;}