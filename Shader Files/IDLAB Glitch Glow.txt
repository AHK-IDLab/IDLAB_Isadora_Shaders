/*

Glow - Fragment Shader


Created for Isadora by Fred Rodrigues

*/

uniform vec2 resolution;
uniform sampler2D tex0;
uniform float time;

uniform int glow;
// ISADORA_INT_PARAM(glow, glw, 0, 7, 0, "Amount of glow");

float weight;


float pix_w;
float pix_h;

void main(void) {

	float e = 2.718281828459045235360287471352;
    vec2 texCoord = vec2(gl_TexCoord[0].x , gl_TexCoord[0].y);
    vec4 col = texture2D(tex0,texCoord);
    
    float pi = 3.1415926535;
    vec4 gws = vec4(0.0,0.0,0.0,1.0);
    
    weight = 1.0/(float(glow)*2.0+1.0)/(float(glow)*2.0+1.0);


    for (int i = 0;i < glow*glow;i++){
        gws = gws + texture2D(tex0,vec2(texCoord.x+float(mod(float(i),float(glow))),texCoord.y+float(i/glow)))*weight*1.3;
        gws = gws + texture2D(tex0,vec2(texCoord.x-float(mod(float(i),float(glow))),texCoord.y+float(i/glow)))*weight*1.3;
        gws = gws + texture2D(tex0,vec2(texCoord.x+float(mod(float(i),float(glow))),texCoord.y-float(i/glow)))*weight*1.3;
        gws = gws + texture2D(tex0,vec2(texCoord.x-float(mod(float(i),float(glow))),texCoord.y-float(i/glow)))*weight*1.3;
    }


    gl_FragColor.rgba = col+gws;

}
